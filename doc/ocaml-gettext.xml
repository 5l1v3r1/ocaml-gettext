<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" 
"/usr/share/xml/schema/dtd/4.3/docbookx.dtd" [
<!--"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"-->
]>
<refentry>
  <refmeta>
    <refentrytitle>OCAML-GETTEXT</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>
  
  <refnamediv>
    <refname><command>ocaml-gettext</command></refname>
    <refpurpose>programs to manage PO and MO file for OCaml source file.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ocaml-gettext</command>
      <group>
        <arg choice="plain">--version</arg>
        <arg choice="plain">--short-version</arg>
        <arg choice="plain">-help</arg>
        <arg choice="plain">--help</arg>
        <sbr/>
        <arg choice="req">--action 
          <group>
            <sbr/>
            <arg choice="plain">extract
              <arg choice="opt">--extract-command         <arg choice="req"><replaceable>cmd</replaceable></arg></arg>
              <arg choice="opt">--extract-default-option  <arg choice="req"><replaceable>options</replaceable></arg></arg>
              <arg choice="opt">--extract-filename-option <arg choice="req"><replaceable>filename</replaceable></arg>
                                                          <arg choice="req"><replaceable>options</replaceable></arg></arg>
              <arg choice="opt">--extract-pot             <arg choice="req"><replaceable>filename</replaceable></arg></arg>
            </arg>
            <sbr/>
            <arg choice="plain">compile
              <arg choice="opt">--compile-output          <arg choice="req"><replaceable>filename</replaceable></arg></arg>
            </arg>
            <sbr/>
            <arg choice="plain">install
              <arg choice="opt">--install-language        <arg choice="req"><replaceable>language</replaceable></arg></arg>
              <arg choice="opt">--install-category        <arg choice="req"><replaceable>category</replaceable></arg></arg>
              <arg choice="opt">--install-textdomain      <arg choice="req"><replaceable>textdomain</replaceable></arg></arg>
              <arg choice="opt">--install-destdir         <arg choice="req"><replaceable>dirname</replaceable></arg></arg>
            </arg>
            <sbr/>
            <arg choice="plain">uninstall
              <arg choice="opt">--uninstall-language      <arg choice="req"><replaceable>language</replaceable></arg></arg>
              <arg choice="opt">--uninstall-category      <arg choice="req"><replaceable>category</replaceable></arg></arg>
              <arg choice="opt">--uninstall-textdomain    <arg choice="req"><replaceable>textdomain</replaceable></arg></arg>
              <arg choice="opt">--uninstall-orgdir        <arg choice="req"><replaceable>dirname</replaceable></arg></arg>
            </arg>
            <sbr/>
            <arg choice="plain">merge
              <arg choice="req">--merge-pot               <arg choice="req"><replaceable>filename</replaceable></arg></arg>
              <arg choice="opt">--merge-backup-extension  <arg choice="req"><replaceable>extension</replaceable></arg></arg>
            </arg>
          </group>
        </arg>
      </group>
      <sbr/>
      <arg rep="repeat">file</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>DESCRIPTION</title>

    <para>
      This manual page documents briefly the <command>ocaml-gettext</command> command.
    </para>

    <variablelist>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--action</arg> 
            <group>
              <arg choice="plain">extract</arg>
              <arg choice="plain">compile</arg>
              <arg choice="plain">install</arg>
              <arg choice="plain">uninstall</arg>
              <arg choice="plain">merge</arg>
            </group>
          </cmdsynopsis>
        </term> 
        <listitem>
          <para>
            Action to execute :
            <itemizedlist>
              <listitem>
                <para>
                  <option>extract</option> : all the file are considered to be OCaml source file and translatable strings
                  are searched inside. The output of the command is a POT file. As a special case, if a file named 
                  <filename>POTFILES</filename> is in the list of the file to search, the file is not searched but all
                  the lines of this files are considered to be filename of file to search.
                </para>
              </listitem>
              <listitem>
                <para>
                  <option>compile</option> : all the file listed are considered to be PO file. The file are compiled in binary
                  MO file,
                </para>
              </listitem>
              <listitem>
                <para>
                  <option>install</option> : all the file listed are considered to be MO file. They are installed in their
                  respective directory considering language, textdomain and category,
                </para>
              </listitem>
              <listitem>
                <para>
                  <option>uninstall</option> : symetric command to install, but it uninstall the file found for the considered
                  language, textdomain, category and filenames,
                </para>
              </listitem>
              <listitem>
                <para>
                  <option>merge</option> : merge a POT file with a PO file.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--extract-command 
              <arg choice="req"><replaceable>cmd</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Command to extract translatable strings from an OCaml source file. This command should output
            the same marshalled structure as <command>ocaml-xgettext</command>. The best is to use the same
            build version of <command>ocaml-gettext</command>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--extract-default-option 
              <arg choice="req"><replaceable>options</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Default option used when extracting translatable strings. This option is a <command>camlp4</command> option and 
            will be passed to <command>ocaml-xgettext</command> when processing all the file that don't have a specific 
            <command>camlp4</command> option.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--extract-filename-option 
              <arg choice="req"><replaceable>filename</replaceable></arg>
              <arg choice="req"><replaceable>options</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Per filename <command>camlp4</command>option. It is used when extracting strings from the specified filename. It
            overrides default <command>camlp4</command> options.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--extract-pot 
              <arg choice="req"><replaceable>filename</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            POT file to write when extracting translatable strings.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--compile-output 
              <arg choice="req"><replaceable>filename</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            MO file to write when compiling a PO file. If not provided, the output will be the name of the PO file with 
            &quot;.mo&quot; extension.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--install-language 
              <arg choice="req"><replaceable>language</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Language to use when installing a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--install-category 
              <arg choice="req"><replaceable>category</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Category to use when installing a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--install-textdomain 
              <arg choice="req"><replaceable>textdomain</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Textdomain to use when installing a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--install-destdir 
              <arg choice="req"><replaceable>dirname</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Base dir used when installing a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--uninstall-language 
              <arg choice="req"><replaceable>language</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Language to use when uninstalling a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--uninstall-category 
              <arg choice="req"><replaceable>category</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Category to use when uninstalling a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--uninstall-textdomain 
              <arg choice="req"><replaceable>textdomain</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Textdomain to use when uninstalling a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--uninstall-orgdir 
              <arg choice="req"><replaceable>dirname</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Base dir used when uninstalling a MO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--merge-pot 
              <arg choice="req"><replaceable>filename</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            POT file to use as a master for merging PO file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--merge-backup-extension 
              <arg choice="req"><replaceable>extension</replaceable></arg>
            </arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Backup extension to use when moving PO file which have been merged.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--version</arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Returns version information on ocaml-gettext.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <arg choice="plain">--short-version</arg>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Returns only the version string of ocaml-gettext. The return is made to be easily parseable by <command>configure</command>
            script. The output of this command will always stay as the shortest version string, made of numeric characters ( 0-9 ) and 
            &quot;.&quot;. The version strings should be compared considering that a version A is greater than a version B if there is a 
            number between two &quot;.&quot; of A is greater than B beginning at the right of the string. For example: 0.14 is greater 
            than 0.13.1.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <cmdsynopsis>
            <group>
              <arg choice="plain">-help</arg>
              <arg choice="plain">--help</arg>
            </group>
          </cmdsynopsis>
        </term>
        <listitem>
          <para>
            Display the help about the <command>ocaml-gettext</command> command.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1>
    <title>NOTES</title>
    <para>
      The options <option>--uninstall-language</option>, <option>--uninstall-textdomain</option>,
      <option>--install-language</option> and <option>--install-textdomain</option> could be 
      guessed from the filename provided. You must be aware that this option can conflict with the fact that you 
      provide several files to install. For example, if you provide a textdomain, you should either install several 
      MO file which filenames only reflect the language or only one MO file if you also provide a language. For
      example, you could execute 
      <command>ocaml-gettext 
        <option>--install-textdomain <parameter>mytextdomain</parameter></option>
        <parameter><filename>fr.po</filename></parameter> 
        <parameter><filename>de.po</filename></parameter>
      </command> 
      without problem, but you cannot execute
      <command>ocaml-gettext 
        <option>--install-textdomain <parameter>mytextdomain</parameter></option>
        <option>--install-language <parameter>fr</parameter></option>
        <parameter><filename>fr.po</filename></parameter> 
        <parameter><filename>de.po</filename></parameter>
      </command>. This restriction is due to the fact that you should not overspecified some file installation.
    </para>
    <para>
      The rules for guessing the language/textdomain is : language[.textdomain].mo. For a full automated install
      without giving any hints, through command line options, you should name your file 
      <filename>fr.mytextdomain.mo</filename> or <filename>de.mytextdomain.mo</filename>.
    </para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>
  
    <para>
      <citerefentry>
        <refentrytitle><command>ocaml-xgettext</command></refentrytitle>
        <manvolnum>1</manvolnum>
      </citerefentry>
    </para>
    <para>
      <citerefentry>
        <refentrytitle>ocaml-gettext-options</refentrytitle>
        <manvolnum>5</manvolnum>
      </citerefentry>
    </para>
  </refsect1>
</refentry>
