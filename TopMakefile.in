#
# sample Makefile for Objective Caml
# Copyright (C) 2001 Jean-Christophe FILLIATRE
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License version 2, as published by the Free Software Foundation.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# 
# See the GNU Library General Public License version 2 for more details
# (enclosed in the file LGPL).

# where to install the binaries
prefix=@prefix@
exec_prefix=@exec_prefix@
BINDIR=@bindir@
LIBDIR=@libdir@

# where to install the man page
MANDIR=@mandir@

# other variables set by ./configure
OCAMLFIND_COMMANDS = "ocamlc=@OCAMLC@ \
	ocamlopt=@OCAMLOPT@ \
	ocamldep=@OCAMLDEP@"
OCAMLC       = @OCAMLFIND@ ocamlc 
OCAMLOPT     = @OCAMLFIND@ ocamlopt
OCAMLDEP     = @OCAMLFIND@ ocamldep
OCAMLBEST    = @OCAMLBEST@
OCAMLVERSION = @OCAMLVERSION@
OCAMLWIN32   = @OCAMLWIN32@
OCAMLFIND    = @OCAMLFIND@
OCAMLP4      = @OCAMLP4@
OCAMLMKLIB   = @OCAMLMKLIB@
CAMLIDL      = @CAMLIDL@
OCAMLYACC    = @OCAMLYACC@
OCAMLLEX     = @OCAMLLEX@
EXE          = @EXE@
MKCAMLP4     = @MKCAMLP4@
CP           = cp -f
TOUCH        = touch
ifdef REQUIRES
CLI_REQUIRES = -package "$(REQUIRES)"
endif

ifdef PREDICATES
CLI_PREDICATES = -predicates "$(PREDICATES)"
endif

ifdef SYNTAX 
CLI_SYNTAX = -syntax $(SYNTAX)
endif

CLI_OCAMLFIND = $(CLI_REQUIRES) $(CLI_PREDICATES) $(CLI_SYNTAX)

BUILDDIR=@BUILDDIR@
BUILDLIB=$(BUILDDIR)/lib
BUILDBIN=$(BUILDDIR)/bin
BUILDDOC=$(BUILDDIR)/doc
OCAMLPATH:=$(BUILDLIB)/:$(OCAMLPATH)
export OCAMLPATH

all: $(STUBSLIB) all-$(OCAMLBEST)
all-byte: $(if $(LIBRARY), install-buildlib-byte, install-buildprog-byte)
all-opt:  $(if $(LIBRARY), install-buildlib-opt, install-buildprog-opt)

install: all install-$(OCAMLBEST)
install-byte: $(if $(LIBRARY), install-lib-byte, install-prog-byte)
install-opt:  $(if $(LIBRARY), install-lib-opt, install-prog-byte)

uninstall: $(if $(LIBRARY), uninstall-lib, uninstall-prog)

clean:: $(if $(LIBRARY), clean-lib, clean-prog)

distclean::

CMX = $(patsubst dll%.so, lib%.a, $(CMO:.cmo=.cmx))


# Build the lib

%.cmxa %.a %.so:
	$(if $(STUBSOBJS),                     \
	 $(OCAMLMKLIB)  -o $* $^ $(STUBSOBJS), \
	 $(OCAMLOPT) -a -o $*.cmxa $^          \
	)

%.cma %.a %.so:
	$(if $(STUBSOBJS),                     \
	 $(OCAMLMKLIB) -o $* $^ $(STUBSOBJS),  \
	 $(OCAMLC)  -a -o $*.cma $^            \
	)

$(BUILDLIB):
	mkdir -p $(BUILDLIB)

# BUG : need a serious rewrite 
install-buildlib-byte: REAL_INSTALLIB = $(filter-out %.cmx, $(filter-out %.cmxa,$(INSTALLIB)))
install-buildlib-byte: $(filter-out %.cmx, $(filter-out %.cmxa,$(INSTALLIB)))
install-buildlib-byte: install-buildlib-common

install-buildlib-opt: REAL_INSTALLIB =  $(INSTALLIB)
install-buildlib-opt: $(INSTALLIB)
install-buildlib-opt: install-buildlib-common

install-buildlib-common: $(BUILDLIB)
	-$(OCAMLFIND) remove -destdir $(BUILDLIB) $(NAME) 
	$(OCAMLFIND)  install -ldconf ignore -destdir $(BUILDLIB) $(NAME) $(REAL_INSTALLIB)

install-lib-byte: REAL_INSTALLIB = $(filter-out %.o,$(filter-out %.a,$(filter-out %.cmx, $(filter-out %.cmxa,$(INSTALLIB)))))
install-lib-byte: $(filter-out %.o,$(filter-out %.a,$(filter-out %.cmx, $(filter-out %.cmxa,$(INSTALLIB)))))
install-lib-byte: install-lib-common

install-lib-opt: REAL_INSTALLIB =  $(INSTALLIB)
install-lib-opt: $(INSTALLIB)
install-lib-opt: install-lib-common
	
install-lib-common:
	$(OCAMLFIND) install -destdir $(LIBDIR) $(NAME) $(REAL_INSTALLIB)

uninstall-lib:
	-$(OCAMLFIND) remove -destdir $(LIBDIR) $(NAME)

clean-lib:
	-$(OCAMLFIND) remove -destdir $(BUILDLIB) $(NAME)
	-$(if $(wildcard $(BUILDLIB)/*), ,$(RM) -r $(BUILDLIB))
	-$(if $(wildcard $(BUILDDIR)/*), ,$(RM) -r $(BUILDDIR))

# Build the executable

$(BUILDBIN): 
	mkdir -p $(BUILDBIN)

BLIBS = $(addsuffix .cma,$(LIBS))

install-buildprog-byte: $(BUILDBIN) $(CMO)
	$(OCAMLC) -o $(NAME) $(INCLUDES) -package "$(REQUIRES)" -linkpkg \
	-predicates "$(PREDICATES)" $(BLIBS) $(CMO)
	$(CP) $(NAME) $(BUILDBIN)

install-prog-byte: install-buildprog-byte
	$(CP) $(NAME) $(BINDIR)

OLIBS = $(addsuffix .cmxa,$(LIBS))

install-buildprog-opt: $(BUILDBIN) $(CMX)
	$(OCAMLOPT) -o $(NAME) $(INCLUDES) -package "$(REQUIRES)" -linkpkg \
	-predicates "$(PREDICATES)" $(OLIBS) $(CMX)
	$(CP) $(NAME) $(BUILDBIN)

install-prog-opt: install-buildprog-opt
	$(CP) $(NAME) $(BINDIR)

clean-prog:
	-$(RM) $(NAME)
	-$(RM) $(BUILDBIN)/$(NAME)
	-$(if $(wildcard $(BUILDBIN)/*), ,$(RM) -r $(BUILDBIN))
	-$(if $(wildcard $(BUILDDIR)/*), ,$(RM) -r $(BUILDDIR))

# Extra files

.SUFFIXES: .mli .ml .cmi .cmo .cmx .mll .mly .zog .idl .h .o

%.ml %.mli %.h %_stubs.c: %.idl
	$(CAMLIDL) -no-include $<

.c.o:
	$(OCAMLC) $(INCLUDES) -c $<	

.mli.cmi:
	$(OCAMLC) $(INCLUDES) $(CLI_OCAMLFIND) -c $<

.ml.cmo:
	$(OCAMLC) $(INCLUDES) $(CLI_OCAMLFIND) -c $<

.ml.o:
	$(OCAMLOPT) $(INCLUDES) $(CLI_OCAMLFIND) -c $<
	
.ml.cmx:
	$(OCAMLOPT) $(INCLUDES) $(CLI_OCAMLFIND) -c $<
	
.mll.ml:
	$(OCAMLLEX) $<

.mly.ml:
	$(OCAMLYACC) -v $<

.mly.mli:
	$(OCAMLYACC) -v $<
	
.zog.ml:
	$(OCAMLP4) pa_o.cmo pa_zog.cma  pr_o.cmo -impl $< > $@
	
clean:: $(if $(LIBRARY),clean-lib,clean-prog)
	rm -f *.cm[ioxa] *.o *.cmxa *.a *.so
	rm -f $(GENERATED) parser.output

distclean:: clean
